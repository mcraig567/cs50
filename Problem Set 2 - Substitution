#include <stdio.h>
#include <cs50.h>
#include <string.h>
#include <ctype.h>

int main(int argc, string argv[])
{
    string ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    string key = argv[1];

    //Convert key to all uppercase
    for (int j = 0; j < 26; j++)
    {
        key[j] = toupper(key[j]);
    }

    //Key Validation
    //Confirm key is 26 characters
    if (strlen(key) != 26)
    {
        printf("Invalid Key - Must be 26 letters\n");
        return 1;
    }

    //Iterate across characters in key
    for (int i = 0; i < strlen(key); i++)
    {

        //Check all letters
        if (key[i] < 65 || key[i] > 90)
        {
            printf("Invalid Key - All values must be letters\n");
            return 1;
        }


        //Check for repeat letters
        int letterCount = 0;

        for (int j = 0; j < strlen(key); j++)
        {
            if (key[i] == key[j])
            {
                letterCount++;
            }
        }

        if (letterCount > 1)
        {
            printf("Invalid Key - Cannot repeat letters\n");
            printf("Letter %c is being repeated\n", key[i]);
            return 1;
        }
    }

    //Get plaintext from user
    string plaintext = get_string("plaintext: ");
    char cyphertext[strlen(plaintext)];

    //printf("String Length: %lu\n", strlen(plaintext));
    //printf("\n");

    //Begin substitution process
    for (int i = 0, n = strlen(plaintext); i < n; i++)
    {
        //printf("Loop #: %i\n", i);
        //printf("Character: %c\n", plaintext[i]);
        //printf("Character int: %i\n", (int) plaintext[i]);

        //Capital letters
        if (plaintext[i] >= 65 && plaintext[i] <= 90)
        {
            for (int h = 0; h < 26; h++)
            {
                if (plaintext[i] == ALPHABET[h])
                {
                    cyphertext[i] = key[h];
                }
            }
        }

        //Lower case letters
        else if (plaintext[i] >= 97 && plaintext[i] <= 122)
        {
            for (int t = 0; t < 26; t++)
            {
                if (plaintext[i] - 32 == ALPHABET[t])
                {
                    cyphertext[i] = key[t] + 32;
                }
            }

        }

        //Punctuation and spaces
        else
        {
            cyphertext[i] = plaintext[i];
        }

        //printf("Cyphertext Character: %c\n", cyphertext[i]);
        //printf("Cyphertext: %s\n", cyphertext);
        //printf("\n");
    }

    //print ciphertext
    printf("ciphertext: ");

    for (int i = 0, n = strlen(plaintext); i < n; i++)
    {
        printf("%c", cyphertext[i]);
    }
    printf("\n");

    return 0;
}
